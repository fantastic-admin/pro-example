
/**
 * 由 Fantastic-admin 提供技术支持
 * Powered by Fantastic-admin
 * https://fantastic-admin.hurui.me
 */
    
import{_ as a}from"./index.vue_vue_type_script_setup_true_lang-dmrcc3Eo.js";import{d as r,c as s,o as i,k as n,aa as c,m as d,a as p,W as e}from"./index-Bnionyve.js";import{_ as l}from"./_demo1.vue_vue_type_script_setup_true_lang-BVXTGHsZ.js";import"./index-Ci0lfOFO.js";const m="<script setup lang=\"ts\">\nimport type { Step, StepContext } from '@/ui/components/FaMultiStepLoader/index.vue'\nimport { toast } from 'vue-sonner'\n\nconst isLoading = ref(false)\nconst taskSteps: Step[] = [\n  {\n    text: '获取用户数据',\n    afterText: '获取用户数据成功',\n    name: 'user',\n    action: async () => {\n      // 模拟异步请求\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      return { id: 1, name: '张三' }\n    },\n  },\n  {\n    text: '获取用户订单（这一步会模拟随机错误）',\n    afterText: '获取用户订单成功',\n    name: 'orders',\n    action: async (context: StepContext) => {\n      await new Promise(resolve => setTimeout(resolve, 1500))\n      // 模拟随机错误\n      if (Math.random() > 0.5) {\n        throw new Error('获取订单数据失败：网络连接超时')\n      }\n      return [\n        { id: 1, userId: context.user.id, product: '商品A' },\n        { id: 2, userId: context.user.id, product: '商品B' },\n      ]\n    },\n  },\n  {\n    text: '处理订单数据',\n    action: async (context: StepContext) => {\n      // 模拟异步请求\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      return {\n        user: context.user,\n        orders: context.orders,\n        totalAmount: context.orders.length * 100,\n      }\n    },\n  },\n]\n\nfunction handleStateChange(state: number) {\n  toast.info(`当前步骤：${state + 1}`)\n}\n\nfunction handleComplete() {\n  toast.success('所有步骤已完成')\n  isLoading.value = false\n}\n\nfunction handleError(error: Error, stepIndex: number) {\n  toast.error(`步骤 ${stepIndex + 1} 执行失败: ${error.message}`)\n  isLoading.value = false\n}\n<\/script>\n\n<template>\n  <div class=\"flex gap-4\">\n    <FaButton @click=\"isLoading = !isLoading\">\n      {{ isLoading ? '停止' : '开始' }}\n    </FaButton>\n    <FaMultiStepLoader\n      :loading=\"isLoading\"\n      :steps=\"taskSteps\"\n      prevent-close\n      @state-change=\"handleStateChange\"\n      @complete=\"handleComplete\"\n      @error=\"handleError\"\n    />\n  </div>\n</template>\n",u=r({__name:"index",setup(f){return(x,_)=>{const t=c,o=a;return i(),s("div",null,[n(t,{title:"多步骤加载器",description:"FaMultiStepLoader"}),n(o,{code:p(m)},{default:d(()=>[n(l)]),_:1},8,["code"])])}}});typeof e=="function"&&e(u);export{u as default};
