
/**
 * 由 Fantastic-admin 提供技术支持
 * Powered by Fantastic-admin
 * https://fantastic-admin.hurui.me
 */
    
import{_ as d}from"./index.vue_vue_type_script_setup_true_lang-dmrcc3Eo.js";import{d as l,c,o as r,k as n,aa as s,m as t,a,W as i}from"./index-Bnionyve.js";import{_ as m}from"./_demo1.vue_vue_type_script_setup_true_lang-jHOFPw3w.js";import{_ as p}from"./_demo2.vue_vue_type_script_setup_true_lang-BojarAEi.js";import{_ as u}from"./_demo3.vue_vue_type_script_setup_true_lang-v2Vtz_y9.js";import{_ as f}from"./_demo4.vue_vue_type_script_setup_true_lang-DG3csob-.js";import{_ as h}from"./_demo5.vue_vue_type_script_setup_true_lang-kEdWMvi2.js";import"./index-Ci0lfOFO.js";import"./index.vue_vue_type_script_setup_true_lang-DaBCz4hW.js";import"./index.vue_vue_type_script_setup_true_lang-BXFVGQaP.js";import"./index.vue_vue_type_script_setup_true_lang-B5n1724t.js";import"./nullish-CHIgUVhi.js";import"./check-w8HtlROy.js";import"./useFormControl-w_mwXmte.js";import"./VisuallyHiddenInput-DIcn5ZUO.js";import"./index-BoypW2lk.js";import"./index.vue_vue_type_script_setup_true_lang-BhWEUCSI.js";const v="<script setup lang=\"ts\">\nimport type { TreeNode } from '@/ui/components/FaTree/index.vue'\n\nconst data = ref<TreeNode[]>([\n  {\n    id: '1',\n    name: '根目录',\n    children: [\n      {\n        id: '1-1',\n        name: '文件夹1',\n        children: [\n          { id: '1-1-1', name: '文件1.txt' },\n          { id: '1-1-2', name: '文件2.txt' },\n          { id: '1-1-3', name: '文件3.txt' },\n        ],\n      },\n      {\n        id: '1-2',\n        name: '文件夹2',\n        children: [\n          { id: '1-2-1', name: '文件3.txt' },\n        ],\n      },\n    ],\n  },\n])\n\nconst selectedNode = ref<TreeNode | null>(null)\nfunction handleSelectionChange(node: TreeNode | null) {\n  selectedNode.value = node\n}\n<\/script>\n\n<template>\n  <FaTree :data @selection-change=\"handleSelectionChange\" />\n  <div class=\"mt-4 text-sm text-gray-500\">\n    <div>\n      当前选中节点：\n    </div>\n    <div>\n      {{ selectedNode?.name }}\n    </div>\n  </div>\n</template>\n",x="<script setup lang=\"ts\">\nimport type { TreeNode } from '@/ui/components/FaTree/index.vue'\n\nconst data = ref<TreeNode[]>([\n  {\n    id: '1',\n    name: '根目录',\n    children: [\n      {\n        id: '1-1',\n        name: '文件夹1',\n        children: [\n          { id: '1-1-1', name: '文件1.txt' },\n          { id: '1-1-2', name: '文件2.txt' },\n          { id: '1-1-3', name: '文件3.txt' },\n        ],\n      },\n      {\n        id: '1-2',\n        name: '文件夹2',\n        children: [\n          { id: '1-2-1', name: '文件3.txt' },\n        ],\n      },\n    ],\n  },\n])\n\nconst checkedNodes = ref<TreeNode[]>([])\n\nfunction handleCheckChange(nodes: TreeNode[]) {\n  checkedNodes.value = nodes\n}\n<\/script>\n\n<template>\n  <FaTree :data checkable @check-change=\"handleCheckChange\" />\n  <div class=\"mt-4 text-sm text-gray-500\">\n    <div>\n      当前选中节点：\n    </div>\n    <div v-for=\"node in checkedNodes\" :key=\"node.id\">\n      {{ node.name }}\n    </div>\n  </div>\n</template>\n",F="<script setup lang=\"ts\">\nimport type { TreeNode } from '@/ui/components/FaTree/index.vue'\n\nconst data = ref<TreeNode[]>([\n  {\n    id: '1',\n    name: '根目录',\n    children: [\n      {\n        id: '1-1',\n        name: '文件夹1',\n        type: 'folder',\n        children: [\n          { id: '1-1-1', name: '文件1.txt', type: 'file' },\n          { id: '1-1-2', name: '文件2.txt', type: 'file' },\n          { id: '1-1-3', name: '文件3.txt', type: 'file' },\n        ],\n      },\n      {\n        id: '1-2',\n        name: '文件夹2',\n        type: 'folder',\n        children: [\n          { id: '1-2-1', name: '文件3.txt', type: 'file' },\n        ],\n      },\n    ],\n  },\n])\n\nfunction customFilter(query: string, node: TreeNode) {\n  // 按类型过滤\n  if (query === 'file' && node.type === 'file') {\n    return true\n  }\n  if (query === 'folder' && node.type === 'folder') {\n    return true\n  }\n  // 按名称过滤\n  return node.name.toLowerCase().includes(query.toLowerCase())\n}\n<\/script>\n\n<template>\n  <FaTree :data filterable filter-placeholder=\"搜索...(输入 folder 或 file 可过滤节点类型)\" :filter-method=\"customFilter\" />\n</template>\n",_='<script setup lang="ts">\nimport type { TreeNode } from \'@/ui/components/FaTree/index.vue\'\n\nconst checkable = ref(false)\n\nconst data = ref<TreeNode[]>([\n  {\n    id: \'1\',\n    name: \'根目录\',\n    children: [\n      {\n        id: \'1-1\',\n        name: \'文件夹1\',\n        children: [\n          { id: \'1-1-1\', name: \'文件1.txt\' },\n          { id: \'1-1-2\', name: \'文件2.txt\' },\n          { id: \'1-1-3\', name: \'文件3.txt\' },\n        ],\n      },\n      {\n        id: \'1-2\',\n        name: \'文件夹2\',\n        children: [\n          { id: \'1-2-1\', name: \'文件3.txt\' },\n        ],\n      },\n    ],\n  },\n])\n\nconst treeRef = useTemplateRef(\'treeRef\')\n\nfunction handleExpand(ids?: string[]) {\n  treeRef.value?.expand(ids)\n}\n\nfunction handleCollapse(ids?: string[]) {\n  treeRef.value?.collapse(ids)\n}\n\nfunction handleSetSelection(id: string) {\n  treeRef.value?.setSelection(id)\n}\n\nfunction handleClearSelection() {\n  treeRef.value?.clearSelection()\n}\n\nfunction handleCheckAll(bool: boolean) {\n  treeRef.value?.checkAll(bool)\n}\n<\/script>\n\n<template>\n  <div class="mb-4 flex items-center gap-2">\n    开启复选框\n    <FaSwitch v-model="checkable" />\n  </div>\n  <div class="mb-4 flex gap-2">\n    <FaButton variant="outline" @click="handleExpand()">\n      展开所有\n    </FaButton>\n    <FaButton variant="outline" @click="handleExpand([\'1\'])">\n      展开根目录\n    </FaButton>\n    <FaButton variant="outline" @click="handleCollapse()">\n      收起所有\n    </FaButton>\n    <FaButton variant="outline" @click="handleCollapse([\'1\'])">\n      收起根目录\n    </FaButton>\n    <FaButtonGroup>\n      <FaButton variant="outline" :disabled="checkable" @click="handleSetSelection(\'1-1-1\')">\n        选中 1-1-1\n      </FaButton>\n      <FaButton variant="outline" :disabled="checkable" @click="handleClearSelection">\n        取消选中\n      </FaButton>\n    </FaButtonGroup>\n    <FaButtonGroup>\n      <FaButton variant="outline" :disabled="!checkable" @click="handleCheckAll(true)">\n        全选\n      </FaButton>\n      <FaButton variant="outline" :disabled="!checkable" @click="handleCheckAll(false)">\n        取消全选\n      </FaButton>\n    </FaButtonGroup>\n  </div>\n  <FaTree ref="treeRef" :data :checkable />\n</template>\n',k="<script setup lang=\"ts\">\nimport type { TreeNode } from '@/ui/components/FaTree/index.vue'\n\nconst data = ref<TreeNode[]>([\n  {\n    id: '1',\n    name: '根目录',\n    icon: 'i-lucide:folder',\n    expandedIcon: 'i-lucide:folder-open',\n    children: [\n      {\n        id: '1-1',\n        name: '文件夹1',\n        icon: 'i-lucide:folder',\n        expandedIcon: 'i-lucide:folder-open',\n        children: [\n          { id: '1-1-1', name: '文件1.txt', icon: 'i-lucide:file' },\n          { id: '1-1-2', name: '文件2.txt', icon: 'i-lucide:file' },\n          { id: '1-1-3', name: '文件3.txt', icon: 'i-lucide:file' },\n        ],\n      },\n      {\n        id: '1-2',\n        name: '文件夹2',\n        icon: 'i-lucide:folder',\n        expandedIcon: 'i-lucide:folder-open',\n        children: [\n          { id: '1-2-1', name: '文件3.txt', icon: 'i-lucide:file' },\n        ],\n      },\n    ],\n  },\n])\n<\/script>\n\n<template>\n  <FaTree :data>\n    <template #default=\"{ node, expanded }\">\n      <div class=\"group flex-center-between\">\n        <div class=\"flex items-center gap-2\">\n          <FaIcon :name=\"expanded ? node.expandedIcon : node.icon\" />\n          <div class=\"text-sm\">\n            {{ node.name }}\n          </div>\n        </div>\n        <FaButton variant=\"outline\" size=\"icon\" class=\"size-6 opacity-0 transition-opacity group-hover:opacity-100\" @click.stop>\n          <FaIcon name=\"i-ep:edit\" />\n        </FaButton>\n      </div>\n    </template>\n  </FaTree>\n</template>\n",T=l({__name:"index",setup(y){return(B,g)=>{const o=s,e=d;return r(),c("div",null,[n(o,{title:"树形组件",description:"FaTree"}),n(e,{code:a(v)},{default:t(()=>[n(m)]),_:1},8,["code"]),n(e,{title:"复选框",code:a(x)},{default:t(()=>[n(p)]),_:1},8,["code"]),n(e,{title:"自定义过滤",code:a(F)},{default:t(()=>[n(u)]),_:1},8,["code"]),n(e,{title:"外部事件",code:a(_)},{default:t(()=>[n(f)]),_:1},8,["code"]),n(e,{title:"自定义节点",code:a(k)},{default:t(()=>[n(h)]),_:1},8,["code"])])}}});typeof i=="function"&&i(T);export{T as default};
